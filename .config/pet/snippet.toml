[[snippets]]
  description = "find files that have '10' recursively"
  command = "grep -l '^10$' -R"
  output = ""

[[snippets]]
  description = "count unique words in a file by lines"
  command = "cat <file_name> | sort | uniq -c"
  output = ""

[[snippets]]
  description = "create symlink"
  command = "ln -s <real_file(dir)_path> <symlink_path>"
  output = ""

[[snippets]]
  description = "unlink <symlink_path>"
  command = "remove symlink"
  output = ""

[[snippets]]
  description = "filter lines by regexp"
  command = "seq 5 | awk '/[24]/'"
  output = ""

[[snippets]]
  description = "三項演算子 by awk"
  command = "seq 5 | awk '{r=$1%2 ? \"奇数\":\"偶数\"; print r}'"
  output = ""

[[snippets]]
  description = "print just first line by awk"
  command = "seq 5 | awk 'NR==1 {print $1}'"
  output = ""

[[snippets]]
  description = "basic usage of sed"
  command = "echo foobar | sed 's/bar/baz/'"
  output = ""

[[snippets]]
  description = "summary lines by awk BEGIN-END"
  command = "seq 5 | awk 'BEGIN{a=0}$1%2==0{print $1,\"偶数\"}$1%2{print $1,\"奇数\"}{a+=$1}END{print \"合計\",a}'"
  output = ""

[[snippets]]
  description = "\"tail -f\" by less"
  command = "less +F <file_name>"
  output = ""

[[snippets]]
  description = "awk by specified separator string"
  command = "echo \"1,2,3,4\\n5,6,7,8\" | awk -F',' '{print $2,$4}'"
  output = ""

[[snippets]]
  description = "extract by from-to condition of sed"
  command = "seq 10 | sed -n '/2/,/6/p'"
  output = ""

[[snippets]]
  description = "find fonts"
  command = "fc-list"
  output = ""

[[snippets]]
  description = "find files that have '10' recursively by ripgrep"
  command = "rg -l '^10$'"
  output = ""

[[snippets]]
  description = "find commands that can execute by current login user"
  command = "sudo -l"
  output = ""

[[snippets]]
  description = "find commands that can execute by group"
  command = "sudo -l -g <group_name>"
  output = ""

[[snippets]]
  description = "find opened files by a process"
  command = "ls /proc/<process_id>/fd"
  output = ""

[[snippets]]
  description = "find openned files by a process"
  command = "lsof -c <process_name>"
  output = ""

[[snippets]]
  description = "show network communication status on this server"
  command = "netstat -anp"
  output = ""

[[snippets]]
  description = "extract logs 2016/12/24 21:00~2016/12/25 03:00"
  command = "cat <log_file_name> | sed -n '/24\\/Dec\\/2016 21:..:../,/25\\/Dec\\/2016 03:..:../p'"
  output = ""

[[snippets]]
  description = "convert line break to space every 3 lines by xargs"
  command = "seq 10 | xargs -n3"
  output = ""

[[snippets]]
  description = "concurrent execute by xargs"
  command = "seq 10 | xargs -P$(nproc)"
  output = ""

[[snippets]]
  description = "use here document"
  command = "cat << END"
  output = ""

[[snippets]]
  description = "substring like operation by parameter expression (変数展開)"
  command = "a=私は俳優よ; echo ${a:0:1}${a:2:2};"
  output = ""

[[snippets]]
  description = "sed like operation by parameter expression (変数展開)"
  command = "a=私は俳優よ; echo ${a/俳優/排骨麺};"
  output = ""

[[snippets]]
  description = "play music by mpv"
  command = "mpv --no-video ."
  output = ""

[[snippets]]
  description = "save a command result to clipboard in Linux"
  command = "echo \"hoge\" | xclip -selection c"
  output = ""

[[snippets]]
  description = "arithmetic operations (四則演算) in shell"
  command = "echo $((1+2))"
  output = ""

[[snippets]]
  description = "declare list in shell"
  command = "a=(\"$SHELL\" \"$LANG\" \"$USER\")"
  output = ""

[[snippets]]
  description = "declare dictionary in shell"
  command = "declare -A b; b[\"SHELL\"]=\"$SHELL\"; b[\"LANG\"]=\"$LANG\"; b[\"USER\"]=\"$USER\""
  output = ""

[[snippets]]
  description = "get string length by parameter expression (変数展開)"
  command = "hoge=\"hoge\"; echo ${#hoge}"
  output = ""

[[snippets]]
  description = "for-loop in shell"
  command = "for x in \"$1\" \"$2\" \"$3\"; do echo $x; done"
  output = ""

[[snippets]]
  description = "while-loop in shell"
  command = "seq 3 | while read x; do echo $x | xargs; done"
  output = ""

[[snippets]]
  description = "check previous command's result"
  command = "echo $?"
  output = ""

[[snippets]]
  description = "check previous pipeline's results in zsh"
  command = "echo ${pipestatus[@]}"
  output = ""

[[snippets]]
  description = "check previous pipeline's results in bash"
  command = "echo ${PIPESTATUS[@]}"
  output = ""

[[snippets]]
  description = "handle shell script's parameters as list by \"$@\""
  command = "set aa bb cc; for x in \"$@\"; do echo $x; done"
  output = ""

[[snippets]]
  description = "check if a file exists in shell"
  command = "if [ -e <file_name> ]; then echo \"file exists\"; else echo \"file doesn't exists\"; fi"
  output = ""

[[snippets]]
  description = "compare if numbers are same in shell"
  command = "if [ 1 -eq 1 ]; then echo \"same num\"; else echo \"different num\"; fi"
  output = ""

[[snippets]]
  description = "compare if strings are same in shell"
  command = "if [ 'a' = 'b' ]; then echo \"same str\"; else echo \"different str\"; fi"
  output = ""

[[snippets]]
  description = "read std input in shell script"
  command = "echo $(cat)"
  output = ""

[[snippets]]
  description = "use deafult value if a specified variable is empty by parameter expression (変数展開)"
  command = "echo ${<variable_name>:-\"fuga\"}"
  output = ""

[[snippets]]
  description = "count line break number"
  command = "seq 100 | wc -l"
  output = ""

[[snippets]]
  description = "show all procs with CPU utilization, memory usage"
  command = "ps aux"
  output = ""

[[snippets]]
  description = "show process tree (parent-child relation)"
  command = "pstree -T"
  output = ""

[[snippets]]
  description = "pet search"
  command = "list1=(\"a\", \"b\", \"c\");list2=(\"${list1[@]}\", \"d\");echo ${list2[@]}"
  output = ""

[[snippets]]
  description = "add items to list in shell"
  command = "list1=(\"a\", \"b\", \"c\");list2=(\"${list1[@]}\", \"d\", \"e\");echo ${list2[@]}"
  output = ""

[[snippets]]
  description = "check variable and declare defaul val by parameter expression (変数展開)"
  command = "echo ${hoge:-\"default value\"}"
  output = ""

[[snippets]]
  description = "create string patterns by brace expression (ブレース展開)"
  command = "echo file.{txt,csv}"
  output = ""

[[snippets]]
  description = "treat a command result as a file by process substitution (プロセス置き換え)"
  command = "diff <(echo \"a\\nb\\nc\") <(echo \"a\\nB\\nc\")"
  output = ""

[[snippets]]
  description = "reference prev command"
  command = "!!"
  output = ""

[[snippets]]
  description = "history 20"
  command = "history"
  output = ""

[[snippets]]
  description = "show a command history"
  command = "history <history_length>"
  output = ""

[[snippets]]
  description = "exec a command in history by history number"
  command = "!<history_number>"
  output = ""

[[snippets]]
  description = "dump Brewfile to specified path"
  command = "brew bundle dump --file ./.Brewfile --force"
  output = ""

[[snippets]]
  description = "install brew packages by .Brewfile in specified path"
  command = "brew bundle install --file ./.Brewfile"
  output = ""

[[snippets]]
  description = "generate random high secure passwords"
  command = "pwgen -s -y 20"
  output = ""

[[snippets]]
  description = "compare strings by regexp in if-statement of shell"
  command = "if [[ 'abc' =~ '^a$' ]]; then echo \"same str\"; else echo \"different str\"; fi"
  output = ""

[[snippets]]
  description = "while infinit-loop in shell"
  command = "while :; do sleep 1; echo hoge; done"
  output = ""

[[snippets]]
  description = "list current folder files recursive"
  command = "find -type f"
  output = ""

[[snippets]]
  description = "find recursively files by file name in current folder"
  command = "find . -name \"file_name\""
  output = ""

[[snippets]]
  description = "find files by file name in current folder"
  command = "find . -maxdepth 1 -name \"file_name\""
  output = ""

[[snippets]]
  description = "remove lines by grep"
  command = "echo \"a\\nb\\nc\" | grep -v '^[ab]'"
  output = ""

[[snippets]]
  description = "replace string by tr command"
  command = "echo \"a, b, c, d\" | tr ',' '|'"
  output = ""

[[snippets]]
  description = "delete string by tr command"
  command = "echo \"a, b, c, d\" | tr -d ','"
  output = ""

[[snippets]]
  description = "show available java environment in ArchLinux"
  command = "archlinux-java status"
  output = ""

[[snippets]]
  description = "set specified java environment as system default in ArchLinux"
  command = "sudo archlinux-java set <java_environment_name>"
  output = ""

[[snippets]]
  description = "register message to slack reminder"
  command = "/remind <#channel_name> <message> <date_time>"
  output = ""
